#include <stdio.h>
#include <stdlib.h>

int main()
{
    printf("%d\n",sizeof(char));
    printf("%d\n",sizeof(wchar_t));
    for(int i=0;i<=127;i++){
        printf("%d %c \n", i, i);
    }
    ///
}

czyszczenie stringa chara napisu napis char string

void wyczysc(char *napis){
napis[0]=0;
}
int main()
{
    char *napis="pieczewo";
    printf(napis);
    printf("\n");
    printf("co nam wyswietli po wyczyszczeniu: ");
    wyczysc(napis);
    printf(napis);
}

liczenie dlugosci stringa napisu char string chara napis dlugosc
int dlugosc(char *napis){
    int i;
    while(napis[i]!=0){
        i++;
    }
    return i;
}
int main()
{
    printf("%d",dlugosc("Olsztyn"));
}

porownanie 2 stringow napisow charow char napis string
int porownaj(char *napis, char *napis1){
    int i, d2, d1;
    d1 = dlugosc(napis);
    d2 = dlugosc(napis1);
    if (d1 != d2) return 0;
    for (i=0;i < d1;i++){
        if (napis[i] != napis1[i]) return 0;
    }
    return 1;
}
int main()
{
    printf("%d", porownaj("Olsztyn", "Olsztyn"));
}

porownanie slownikowe
int porownajslownikowo(char *napis1,  char *napis2){
    int i;
    if(porownaj(napis1,napis2,)==1){
        return 0;
    }
    for(i=0;napis1[i]!=0 && napis2[i] != 0;i++){
        if(napis1[i]!=napis2[i]){
        if (napis1[i]<napis2[i]){
            return 1;
        }
        else if (napis1[i]>napis2[i]){
            return 0;
        }
        }
    }
    if (napis1[i]!=0){
        return 0;
    }
    if (napis2[i]!=0){
        return 1;
    }
}

przepisanie z 1 tablicy do 2
void przepisz(char *napis, char *napis1){
    int i;
    for(i=0;i<dlugosc(napis);i++){
        napis1[i]=napis[i];
    }
    napis1[dlugosc(napis)]=0;
}

void przepisz(char *napis, char *napis1, unsigned int n){
    int i;
    for(i=0;i < n;i++){
        napis1[i]=napis[i];
    }
    napis1[n]=0;
}

2 tablice w 3 najpierw 1 potem 2 tab1="ala" tab2="ma kota" tab3="ala ma kota"
char sklej(char *napis, char *napis1, unsigned int n){
    char *napis3[50];
    int d1=dlugosc(napis);
    int d2=dlugosc(napis1);
    for(int i=0;i < d1;i++){
        napis3[i]=napis[i];
    }
    for (int i=1;i < d2;i++){
        napis3[d1+i]=napis1[i];
    }
    return napis3;
}

void maleduze(char *napis){
    int d1=dlugosc(napis);
    for (int i=0;i < d1;i++){
        if ((napis[i] >= 'a') && (napis[i] <='z')) {
            napis[i] =napis[i]+'A'-'a';
    }
}

wytnij indeksy od n do m
void wytnij(char *napis, unsigned int m, unsigned int n){
    while (n> m){
        "Podaj ponownie n mniejsze od m:"
        scanf("%d", n);
    }
    for (int i=n;i < m;i++){
            napis[i]=0;
}