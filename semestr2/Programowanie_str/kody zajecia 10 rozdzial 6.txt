nie dziala, usuwanie 1 napotkanego wyrazu z 2 tablicy w pierwszej

void wytnij2 ( char* nap1 , char* nap2 ) {
int i, dl;
for (dl =0; nap2[dl] != 0; dl++);
for (i =0; nap1[i] != 0; i++)
    if (porownaj(nap1, nap2, i)){
        wytnij(nap1, i, i+dlâˆ’1);
}
}

porownywanie tablic
bool porownaj (char* nap1 ,char* nap2,int n ) {
int i;
for (i = 0 ;(nap1[i] != 0)&&(nap2[i]!= 0 );i++)
if (nap1[n+i] != nap2 [i]){
return false;
}
if (nap2[i]==0){
return true;
}
else
return false;
}

wycinanie tych samych znakow
void wytnijtm(char* nap1, char* nap2){
int i, j;
for (i=0,j=0;nap1[i]!=0;i++){
    if(nap1[i]!=nap2[i]){
        if (j<i){
            nap1[j]=nap1[i];
            j++;
        }
    }
    nap1[j]=0;
}
}


char *godzina(int godzina, int minuta, int sekunda){
    char*kkkk=malloc(9*sizeof(char));
    sprintf(kkkk,"%02d:%02d:%02d",godzina,minuta,sekunda);
    return kkkk;
}

char *sklej(char *nap1,char* nap2, char* nap3){
    char*kkk=malloc((strlen(nap1)+strlen(nap2)+strlen(nap3)+1)*sizeof(char));
    strcpy(kkk,nap1);
    strcat(kkk,nap2);
    strcat(kkk,nap3);
    return kkk;
}

int ** alokuj(unsigned int n, unsigned int m){
	int **t=malloc(n*sizeof(int*));
	int i;
	for(i=0;i<n;i++){
t[i]=malloc(m*sizeof(int));
}
return t;
}

int (*alokuj(unsigned int n, unsigned int m)){
return malloc(n*sizeof(int[m]));
}

void wypisz(unsigned int n, unsigned int m, int **t){
    int i,j;
    for (i=0;i<n;i++){
        for(j=0;j<n;j++){
            printf("%d\t",t[i][j]);
        }
        printf("\n");
    }
}

void wczytaj(unsigned int n, unsigned int m, int **t){
    int i,j;
    for (i=0;i<n;i++){
        for(j=0;j<n;j++){
            scanf("%d",t[i][j]);
        }
    }
}
\\\ tablica tablic
int main(){
int **t=alokuj(3,3);
wczytaj(t,3,3);
wypisz(t,3,3);

/// tablcia dwuwymiarowa
int t2[3][3];
wczytaj2(3,3,t2);
wypisz2(3,3,t2);

/// inicjalizacja bez wczytywania
int t3[4][4]={(20,2,3,4),(2,9,31,4),(5,6,7,8),(5,4,4,7)};
wypisz2(4,4,t3);

int ** alokuj_trojkatna(unsigned int n){
int **t=malloc(n*sizeof(int*));
int i;
for(i=0;i<n;i++){
t[i]=malloc((i+1)*sizeof(int));    
}
return(t);
}

void wypisz_trojkatna(int **t, unsigned int n){
    int i,j;
    for(i=0;i<n;i++){
        for (j=0;j<n;j++){
            printf("%d\t",t[i][j]);
        }
        printf("\n");
    }
}

void skanuj_trojkatna(int **t, unsigned int n){
    int i,j;
    for(i=0;i<n;i++){
        for (j=0;j<n;j++){
            scanf("%d\t",t[i][j]);
        }
    }
}

int main(){
int** trojkatna=alokuj_trojkatna(3);
wczytaj_trojkatna(trojkatna,3);
wypisz_trojkatna(trojkatna,3);
}

void zeruj(int **t, unsigned int n, unsigned int m){
int i,j;
for(i=0;i<n;i++){
for(j=0;j<n;j++{
t[i][j]=0;
}
}
}

void zeruj_szachownica(int **t, unsigned int n, unsigned int m){
int i,j;
for(i=0;i<n;i++){
for(j=0;j<n;j++){
    if(i+j/2==0){
t[i][j]=0;
    }
}
}
}
void zwolnij(unsigned int n, int t[][n]){
free(t);
}

