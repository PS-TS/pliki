wypisanie elementow
void wypisz(unsigned int n, int *tab){
    int i;
    for (i=0;i<n;i++){
        printf("%d\t",tab[i]);
    }
    printf("\n");
}

wstep do tablic
#include <stdio.h>
#include <stdlib.h>
void wypisz(unsigned int n, int *tab){
    int i;
    for (i=0;i<n;i++){
        printf("%d\t",tab[i]);
    }
    printf("\n");
}

int main()
{
    int tablica[6];
    tablica[0]=7;
    tablica[1]= 6;
    tablica[2] = 5;
    tablica[3] = 4;
    tablica[4] = 3;
    tablica[5] = 2;
    wypisz(6, tablica);
    int tab2[]={1, 5, 6, 7, 9};
    wypisz(5, tab2);
    int *tabliczka=malloc(3*sizeof(int));
    tabliczka[0]=1;
    tabliczka[1]=3;
    tabliczka[2]=2;
    wypisz(3, tabliczka);
    return 0;

}

wyzerowanie
void wyzerowanie(unsigned int n, int *tab){
    int i;
    for (i=0;i<n;i++){
    tab[i] =0;
    }
    printf("%d", tab[i]);
}

indeksowanie
void indeksuj(unsigned int n, int *tab){
    int i;
    for (i=0;i<n;i++){
    tab[i] =i;
    }
    printf("%d", tab[i]);
}

podwajanie
void podwajanie(unsigned int n, int *tab){
    int i;
    for (i=0;i<n;i++){
    tab[i] =2*tab[i];
    }
    printf("%d", tab[i]);
}

zmiana znakow (funckja abs)
void modul(unsigned int n, int *tab){
    int i;
    for (i=0;i<n;i++){
    tab[i] =abs(tab[i]);
    }
    printf("%d", tab[i]);
}

suma
int suma(unsigned int n, int *tab){
    int suma=0;
    int i=0;
    for (i=0;i<n;i++){
        suma=suma+tab[i];
    }
    return suma;
}

suma kwadratow
int suma(unsigned int n, int *tab){
    int suma=0;
    int i=0;
    for (i=0;i<n;i++){
        suma=suma+tab[i]*tab[i];
    }
    return suma;
}

srednia arytmetyczna
float sredniarytmetyczna(unsigned float n, int *tab){
    int i=0;
    int suma=0;
    for (i=0;i<n;i++){
        suma=suma+tab[i];
    }
    suma = suma / n;
    return suma;
}

const = stale (nie mozna zmieniac)

srednia geometryczna
float geometryczna(float n, int *tab)
   {
    int i;
    int suma=1;
    for(int i=0;i<n;i++)
       {
    suma=tab[i]*suma;
       }
    return pow(suma, 1.0/n);
   }

srednia harmoniczna
float harmoniczna(unsigned int n,unsigned int *tab)
   {
    int i;
    float suma=0;
    for(int i=0;i<n;i++)
       {
    suma=suma*1.0/tab[i];
       }
    return n/suma;
   }

liczby pierwsze Kratostenes
void sito_Kratostenesa(unsigned int n){
bool liczby[n];
for (int i=0; i<n;i++){
    liczby[i]=true;
}
int j,k;
for(j=2;j<n;j++){
    if (liczby[j]){
        for (k=2*j;k<n;k=k+j){
            liczby[k]=false;
        }
    }
}
for(i=0;i<n;i++){
    if(liczby[i])
    {
        wynik=i;
    }
}
return wynik;
}

ile liczb pierwszych Kratostenes
void sito_Kratostenesa(unsigned int n){
bool liczby[n];
for (int i=0; i<n;i++){
    liczby[i]=true;
}
int j,k,i,wynik;
for(j=2;j<n;j++){
    if (liczby[j]){
        for (k=2*j;k<n;k=k+j){
            liczby[k]=false;
        }
    }
}
for(i=2;i<n;i++){
    if(liczby[i])
    {
        wynik=wynik++;
    }
}
return wynik;
}

zamiana tablicy na druga tablice (powielenie, przepisanie)
void przepisz(unsigned int n, int* tab1, int* tab2){
    int i;
    for(int i=0;i< n;i++){
        tab2[i]=tab1[i];
    }
}

zamiana tablicy na druga odwrocona (powielenie, przepisanie)
void przepiszodwrocone(unsigned int n, int* tab1, int* tab2){
    int i;
    for(int i=0;i < n;i++){
        tab2[i]=tab1[n-1-i];
    }
}